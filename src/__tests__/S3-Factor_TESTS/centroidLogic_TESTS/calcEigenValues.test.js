import calcEigenValues from "../../../S3-factor/centroidLogic/calcEigenValues";

const parameter1 = [
  [
    -0.2913921,
    -0.38405309,
    0.36818255,
    0.33476604,
    -0.54873003,
    0.47844413,
    0.58270093,
    -0.5156279,
    0.00535119
  ],
  [
    0.54946489,
    0.25842464,
    0.53279182,
    0.48828577,
    -0.55050616,
    -0.25841561,
    -0.27694738,
    0.2516003,
    0.10235977
  ],
  [
    0.27235702,
    0.53340833,
    -0.06233098,
    0.23347536,
    0.09999703,
    0.49517695,
    0.31834782,
    0.15611557,
    -0.20504991
  ],
  [
    0.38127303,
    0.25798596,
    -0.04259364,
    -0.23108778,
    0.3732567,
    -0.20646162,
    -0.12459488,
    -0.18559107,
    0.23330742
  ],
  [
    0.136368,
    0.00985499,
    0.12479254,
    0.14788418,
    0.08510235,
    0.40052389,
    0.12244333,
    -0.26464363,
    0.27489369
  ],
  [
    0.11270206,
    0.0465501,
    -0.04461116,
    0.05895006,
    0.10705338,
    0.13848592,
    0.0103522,
    0.22546198,
    -0.28485646
  ],
  [
    0.11134683,
    0.21171527,
    0.04065608,
    0.20433973,
    -0.23177919,
    -0.26077339,
    -0.04834682,
    0.18558271,
    0.13839383
  ]
];
const parameter2 = 9;

const testValue1 = [1.6155, 1.4113, 0.8401, 0.5535, 0.3844, 0.1831, 0.2783];
const testValue2 = [18, 16, 9, 6, 4, 2, 3];

test("calc Eigen values", () => {
  let value1 = calcEigenValues(parameter1, parameter2);
  expect(value1[0]).toEqual(testValue1);
  expect(value1[1]).toEqual(testValue2);
});
